# -*- coding: utf-8 -*-
"""Real-Time Twitter Sentiment Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kjJfvZHTOj2JEUVrRL-Rw5Z73M73FeOD
"""

import pandas as pd
import matplotlib.pyplot as plt
import re
from nltk.sentiment import SentimentIntensityAnalyzer
import nltk

nltk.download('vader_lexicon')

def preprocess(text):
    text = re.sub(r'http\S+', '', text)
    text = re.sub(r'@\w+', '', text)
    text = re.sub(r'#\w+', '', text)
    text = re.sub(r'[^a-zA-Z0-9\s]', '', text)
    text = text.lower()
    return text

def get_sentiment(text, analyzer):
    scores = analyzer.polarity_scores(text)
    compound = scores['compound']
    if compound >= 0.05:
        return 'Positive'
    elif compound <= -0.05:
        return 'Negative'
    else:
        return 'Neutral'

def main():
    df = pd.read_csv("Tweets.csv")

    # Print the first few rows to understand the structure
    print("Dataset preview:")
    print(df.head())

    # Use the 'text' column for sentiment analysis
    df['clean_text'] = df['text'].apply(preprocess)

    # Initialize the Sentiment Analyzer
    sia = SentimentIntensityAnalyzer()

    # Compute sentiment for each tweet
    df['computed_sentiment'] = df['clean_text'].apply(lambda x: get_sentiment(x, sia))

    # Display a sample of the results
    print("\nSample of processed tweets and their computed sentiments:")
    print(df[['text', 'clean_text', 'computed_sentiment']].head(10))

    # Visualize the computed sentiment distribution
    sentiment_counts = df['computed_sentiment'].value_counts()
    sentiment_counts.plot(kind='bar', color=['green', 'red', 'gray'])
    plt.title("Computed Sentiment Distribution in Airline Tweets")
    plt.xlabel("Sentiment")
    plt.ylabel("Number of Tweets")
    plt.show()

if __name__ == "__main__":
    main()